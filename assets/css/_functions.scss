// functions

/// Array item getter
/// @param {map} $map - Name of map source
/// @param {string} $key - Name of map item to get
/// @return {*} map item
/// @throw 'Unknown map item `#{$name}`.'
@function array($map, $key) {
  @if not map-has-key($map, $key) {
    @error "Unknown map item `#{$key}`.";
  }

  @return map-get($map, $key);
}

/// Constant getter
/// @param {String} $name - Name of constant to get
/// @return {*} Constant value
/// @require $CONSTANTS
/// @throw 'Unknown constant `#{$name}`.'
@function const($name) {
  @if not map-has-key($CONSTANTS, $name) {
    @error "Unknown constant `#{$name}`.";
  }

  @return map-get($CONSTANTS, $name);
}

/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
  @return mix(#000, $color, $percentage);
}

/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
  @return mix(#fff, $color, $percentage);
}

/// Get readable escaped unicode code
/// @param {uniceode code} | ex.: f000
/// @return {escaped unicode code} | ex.: \f000
@function unicode_escaped($code) {
  @return unquote('"') + unquote(str-insert($code, '\\', 1)) + unquote('"');
}

//safe colors formating
// RGB
@function safe-rgb($color) {
  @return unquote('rgb(#{red($color)}, #{green($color)}, #{blue($color)})');
}
//RGBa
@function safe-rgba($color, $alpha: 1) {
  @return unquote('rgba(#{red($color)}, #{green($color)}, #{blue($color)}, #{$alpha})');
}
